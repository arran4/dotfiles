{{- $isWsl := or (env "WSL_DISTRO_NAME") (env "IS_WSL") | not | not -}}
{{- $isDevcontainer := or (env "REMOTE_CONTAINERS") (env "CODESPACES") (env "VSCODE_REMOTE_CONTAINERS_SESSION") | not | not -}}
{{- $isGnome := lookPath "gnome-shell" | not | not -}}
{{- $hasHomeGPG := not ( kindIs "boolean" ( stat (joinPath .chezmoi.homeDir ".gnupg/private-keys-v1.d" ) ) ) -}}
{{- $headlessGuess := ( or $isWsl (not (or ( env "DISPLAY" ) (eq .chezmoi.os "windows" ) ) ) ) -}}
{{- $gpgconfiguredGuess := $hasHomeGPG -}}
{{- $headless := promptBool "headless" $headlessGuess -}}
{{- $gpgconfigured := promptBool "gpgconfigured" $gpgconfiguredGuess -}}
{{- $autoGit := promptBool "auto git?" true -}}
{{- $gitUserName := promptString "git user.name" (trim (output "sh" "-c" "git config --get user.name 2>/dev/null || getent passwd $(id -un) | cut -d ':' -f5 | cut -d ',' -f1 || getent passwd $(id -un) | cut -d ':' -f1")) -}}
{{- $gitUserEmail := promptString "git user.email" (trim (output "sh" "-c" "git config --get user.email 2>/dev/null || true")) -}}
{{- $generatedTime := now | date "2006-01-02 15:04:05 -0700" -}}

{{- $optbins := (list) -}}
{{- $usrbins := (list) -}}
{{- $usrlocalbins := (list) -}}
{{- $binpaths := (list) -}}
{{- $binroots := (list) -}}
{{- $terminfosearch := (list) -}}
{{- $termfallback := (list "linux" "vt100" ) -}}
{{- $gpgLocation := "/usr/bin/gpg" -}}

#{{ if eq .chezmoi.os "darwin" }} Darwin
        {{- $optbins = (list) -}}
        {{- $usrbins = (list) -}}
        {{- $usrlocalbins = (list) -}}
	{{- $binpaths = (list (joinPath .chezmoi.homeDir "/.dotnet/tools") ) -}}
        {{- $binroots = (list "/" "/usr/" .chezmoi.homeDir (joinPath .chezmoi.homeDir "/.local" ) (joinPath .chezmoi.homeDir "/go" ) (joinPath .chezmoi.homeDir "/Library/flutter" ) (joinPath .chezmoi.homeDir "/.pub-cache" ) (joinPath .chezmoi.homeDir "/.cache/npm" ) ) -}}
        {{- $terminfosearch = (list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" ) -}}
        {{- $termfallback = (list "xterm" "linux" "vt100" ) -}}
#{{ else if eq .chezmoi.os "linux" }} Linux
        {{- $optbins = (list) -}}
        {{- $usrbins = (list "games" ) -}}
        {{- $usrlocalbins = (list) -}}
	{{- $binpaths = (list (joinPath .chezmoi.homeDir "/.dotnet/tools" ) ) -}}
        {{- $binroots = (list "/" "/usr/" "/usr/local/" .chezmoi.homeDir (joinPath .chezmoi.homeDir "/.local" ) (joinPath .chezmoi.homeDir "/go" ) (joinPath .chezmoi.homeDir "/.go/path" ) (joinPath .chezmoi.homeDir "/libs/flutter" ) (joinPath .chezmoi.homeDir "/.pub-cache" ) (joinPath .chezmoi.homeDir "/.cache/npm" ) ) -}}
        {{- $terminfosearch = (list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" ) -}}
        {{- $termfallback = (list "rxvt" "xterm" "linux" "vt100" ) -}}
#{{ else if eq .chezmoi.os "windows" }} Windows
        {{- $optbins = (list) -}}
        {{- $usrbins = (list) -}}
        {{- $usrlocalbins = (list) -}}
	{{- $binpaths = (list) -}}
        {{- $binroots = (list) -}}
        {{- $terminfosearch = (list) -}}
        {{- $termfallback = (list "linux" "vt100" ) -}}
        {{- $gpgLocation = "C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe" -}}
#{{ else if eq .chezmoi.os "solaris" }} Solaris
        {{- $optbins = (list "httrack" "SUNWsneep" "test" "VRTSvxvm" "SUNWvts" "SUNWexplo" "VRTS" "VRTSob" ) -}}
        {{- $usrbins = (list "local" "sfw" "ccs" ) -}}
        {{- $usrlocalbins = (list "mysql" "apache" "apache2" "php" ) -}}
	{{- $binpaths = (list (joinPath .chezmoi.homeDir "/.dotnet/tools" ) ) -}}
        {{- $binroots = (list "/" "/usr/" .chezmoi.homeDir (joinPath .chezmoi.homeDir "/.local" ) (joinPath .chezmoi.homeDir "/go" ) ) -}}
        {{- $terminfosearch = (list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" ) -}}
        {{- $termfallback = (list "xterm" "linux" "vt100" ) -}}
#{{ else }} Unknown OS {{ .chezmoi.os }}
        {{- $optbins = (list) -}}
        {{- $usrbins = (list) -}}
        {{- $usrlocalbins = (list) -}}
	{{- $binpaths = (list) -}}
        {{- $binroots = (list) -}}
        {{- $terminfosearch = (list) -}}
        {{- $termfallback = (list "linux" "vt100" ) -}}
#{{ end }} End OS Specific code

{{- $gitCredentialManagerLocation := findExecutable "bin/git-credential-manager" $binroots -}}
{{- $gitCredentialOAuthLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/git-credential-oauth") -}}
  {{- $gitCredentialOAuthLocation = joinPath .chezmoi.homeDir "/.local/bin/git-credential-oauth" -}}
{{- else -}}
  {{- $gitCredentialOAuthLocation = findExecutable "bin/git-credential-oauth" $binroots -}}
  {{- if eq $gitCredentialOAuthLocation "" -}}
    {{- $gitCredentialOAuthLocation = lookPath "git-credential-oauth" -}}
  {{- end -}}
{{- end -}}
{{- $vimdiffLocation := findExecutable "bin/vimdiff" $binroots -}}
{{- $nvimdiffLocation := findExecutable "bin/nvimdiff" $binroots -}}
{{- $kdiff3Location := findExecutable "bin/kdiff3" $binroots -}}
{{- $vimLocation := findExecutable "bin/vim" $binroots -}}
{{- $neovimLocation := findExecutable "bin/nvim" $binroots -}}
{{- $vimpagerLocation := findExecutable "bin/vimpager" $binroots -}}
{{- $nvimpagerLocation := findExecutable "bin/nvimpager" $binroots -}}
{{- $gitPagerLocation := findOneExecutable (list "delta" "nvimpager" "vimpager" "nvim" "vim") $binroots -}}
{{- $zshLocation := findExecutable "bin/zsh" $binroots -}}
{{- $lessLocation := findExecutable "bin/less" $binroots -}}
{{- $mvnLocation := findExecutable "bin/mvn" $binroots -}}
{{- $zellijLocation := findExecutable "bin/zellij" $binroots -}}
{{- $tmuxLocation := findExecutable "bin/tmux" $binroots -}}
{{- $ghLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/gh") -}}
  {{- $ghLocation = joinPath .chezmoi.homeDir "/.local/bin/gh" -}}
{{- else -}}
  {{- $ghLocation = findExecutable "bin/gh" $binroots -}}
  {{- if eq $ghLocation "" -}}
    {{- $ghLocation = lookPath "gh" -}}
  {{- end -}}
{{- end -}}

{{- $gitTagIncLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/git-tag-inc") -}}
  {{- $gitTagIncLocation = joinPath .chezmoi.homeDir "/.local/bin/git-tag-inc" -}}
{{- else -}}
  {{- $gitTagIncLocation = findExecutable "bin/git-tag-inc" $binroots -}}
  {{- if eq $gitTagIncLocation "" -}}
    {{- $gitTagIncLocation = lookPath "git-tag-inc" -}}
  {{- end -}}
{{- end -}}

{{- $rarLocation := findExecutable "bin/rar" $binroots -}}
{{- if eq $rarLocation "" -}}
  {{- $rarLocation = lookPath "rar" -}}
{{- end -}}

{{- $sevenZipLocation := findExecutable "bin/7z" $binroots -}}
{{- if eq $sevenZipLocation "" -}}
  {{- $sevenZipLocation = lookPath "7z" -}}
{{- end -}}

{{- $digLocation := findExecutable "bin/dig" $binroots -}}
{{- if eq $digLocation "" -}}
  {{- $digLocation = lookPath "dig" -}}
{{- end -}}

{{- $xinputLocation := findExecutable "bin/xinput" $binroots -}}
{{- if eq $xinputLocation "" -}}
  {{- $xinputLocation = lookPath "xinput" -}}
{{- end -}}

{{- $chromeLocation := findOneExecutable (list
  "bin/google-chrome"
  "bin/google-chrome-stable"
  "bin/google-chrome-unstable"
  "bin/google-chrome-beta") $binroots -}}
{{- if eq $chromeLocation "" -}}
        {{- writeToStdout "Can't find chrome \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $gitCredentialManagerLocation )) -}}
        {{- writeToStdout "Can't find GCM: https://github.com/GitCredentialManager/git-credential-manager/releases \n" -}}
{{- end -}}

{{- if not (stat $gitCredentialOAuthLocation ) -}}
        {{- writeToStdout "Can't find git-credential-oauth \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $neovimLocation)) -}}
        {{- writeToStdout "Can't find neovim \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimLocation)) -}}
        {{- writeToStdout "Can't find vim \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimdiffLocation)) -}}
        {{- writeToStdout "Can't find vimdiff \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimpagerLocation)) -}}
        {{- writeToStdout "Can't find vimpager \n" -}}
{{- end -}}
{{- if not (stat $gitPagerLocation ) -}}
        {{- writeToStdout "Can't find suitable git pager \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $zellijLocation)) -}}
        {{- writeToStdout "Can't find zellij \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $tmuxLocation)) -}}
        {{- writeToStdout "Can't find tmux \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not $headless) (not (stat $kdiff3Location)) -}}
        {{- writeToStdout "Can't find kdiff3 \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "windows") (not (stat $gpgLocation )) -}}
        {{- writeToStdout "Missing GPG install Kleopatra https://gpg4win.org/download.html \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $zshLocation )) -}}
        {{- writeToStdout "Can't find zsh \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $lessLocation )) -}}
        {{- writeToStdout "Can't find less \n" -}}
{{- end -}}

{{- if not (stat $mvnLocation ) -}}
        {{- writeToStdout "Can't find maven (mvn) \n" -}}
{{- end -}}

{{- if not (stat $ghLocation ) -}}
        {{- writeToStdout "Can't find GitHub CLI (gh) \n" -}}
{{- end -}}

{{- if not (stat $gitTagIncLocation ) -}}
        {{- writeToStdout "Can't find git-tag-inc \n" -}}
{{- end -}}

{{- if not (stat $rarLocation ) -}}
        {{- writeToStdout "Can't find rar \n" -}}
{{- end -}}

{{- if not (stat $sevenZipLocation ) -}}
        {{- writeToStdout "Can't find 7z \n" -}}
{{- end -}}

{{- if not (stat $digLocation ) -}}
        {{- writeToStdout "Can't find dig \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $xinputLocation )) -}}
        {{- writeToStdout "Can't find xinput \n" -}}
{{- end -}}

[git]
    autoCommit = {{ $autoGit }}
    autoPush = {{ $autoGit }}

[data]
        headless={{ $headless }}
        gpgconfigured={{ $gpgconfigured }}
        isWsl={{ $isWsl }}
        isDevcontainer={{ $isDevcontainer }}
        isGnome={{ $isGnome }}
        gitUserName="{{ $gitUserName }}"
        gitUserEmail="{{ $gitUserEmail }}"
        gitCredentialManagerLocation="{{ $gitCredentialManagerLocation }}"
        gitCredentialOAuthLocation="{{ $gitCredentialOAuthLocation }}"
        vimdiffLocation="{{ $vimdiffLocation }}"
        nvimdiffLocation="{{ $nvimdiffLocation }}"
        kdiff3Location="{{ $kdiff3Location }}"
        vimLocation="{{ $vimLocation }}"
        neovimLocation="{{ $neovimLocation }}"
        vimpagerLocation="{{ $vimpagerLocation }}"
        nvimpagerLocation="{{ $nvimpagerLocation }}"
        gitPagerLocation="{{ $gitPagerLocation }}"
        gpgLocation="{{$gpgLocation}}"
        zshLocation="{{$zshLocation}}"
        lessLocation="{{$lessLocation}}"
        mvnLocation="{{$mvnLocation}}"
        zellijLocation="{{$zellijLocation}}"
        tmuxLocation="{{$tmuxLocation}}"
        ghLocation="{{$ghLocation}}"
        gitTagIncLocation="{{$gitTagIncLocation}}"
        rarLocation="{{$rarLocation}}"
        sevenZipLocation="{{$sevenZipLocation}}"
        digLocation="{{$digLocation}}"
        xinputLocation="{{$xinputLocation}}"
        chromeLocation="{{$chromeLocation}}"
        # Timestamp of when chezmoi templates were last processed. Defined here
        # so it remains constant across templated files and prevents noisy diffs
        # when regenerating dotfiles.
        generatedTime="{{$generatedTime}}"
        optbins = [{{range $each := $optbins}}"{{$each}}", {{end}}]
        usrbins = [{{range $each := $usrbins}}"{{$each}}", {{end}}]
        usrlocalbins = [{{range $each := $usrlocalbins}}"{{$each}}", {{end}}]
        binpaths = [{{range $each := $binpaths}}"{{$each}}", {{end}}]
        binroots = [{{range $each := $binroots}}"{{$each}}", {{end}}]
        terminfosearch = [{{range $each := $terminfosearch}}"{{$each}}", {{end}}]
        termfallback = [{{range $each := $termfallback}}"{{$each}}", {{end}}]

[diff]
	command = "more"
{{if stat $nvimdiffLocation -}}
[merge]
	command = "{{$nvimdiffLocation}}"
{{else if stat $vimdiffLocation -}}
[merge]
	command = "{{$vimdiffLocation}}"
{{end -}}
