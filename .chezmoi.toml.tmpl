{{- $isWsl := or (env "WSL_DISTRO_NAME") (env "IS_WSL") | not | not -}}
{{- $isDevcontainer := or (env "REMOTE_CONTAINERS") (env "CODESPACES") (env "VSCODE_REMOTE_CONTAINERS_SESSION") | not | not -}}
{{- $isGnome := lookPath "gnome-shell" | not | not -}}
{{- $hasHomeGPG := not ( kindIs "boolean" ( stat (joinPath .chezmoi.homeDir ".gnupg/private-keys-v1.d" ) ) ) -}}
{{- $headlessGuess := ( or $isWsl (not (or ( env "DISPLAY" ) (eq .chezmoi.os "windows" ) ) ) ) -}}
{{- $gpgconfiguredGuess := $hasHomeGPG -}}
{{- $headless := promptBool "headless" $headlessGuess -}}
{{- $gpgconfigured := promptBool "gpgconfigured" $gpgconfiguredGuess -}}
{{- $autoGit := promptBool "auto git?" true -}}

{{- if and (eq .chezmoi.os "linux") (not (stat "/usr/local/bin/git-credential-manager" )) -}}
        {{- writeToStdout "Can't find GCM: https://github.com/GitCredentialManager/git-credential-manager/releases \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat "/usr/bin/atuin" )) -}}
        {{- writeToStdout "Can't find atuin: https://github.com/ellie/atuin/releases \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (lookPath "vim")) -}}
        {{- writeToStdout "Can't find vim \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (lookPath "vimdiff")) -}}
        {{- writeToStdout "Can't find vimdiff \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not $headless) (not (lookPath "kdiff3")) -}}
        {{- writeToStdout "Can't find kdiff3 \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "windows") (not (stat "C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe" )) -}}
        {{- writeToStdout "Missing GPG install Kleopatra https://gpg4win.org/download.html \n" -}}
{{- end -}}

[git]
    autoCommit = {{ $autoGit }}
    autoPush = {{ $autoGit }}

[data]
        headless={{ $headless }}
        gpgconfigured={{ $gpgconfigured }}
        isWsl={{ $isWsl }}
        isDevcontainer={{ $isDevcontainer }}
        isGnome={{ $isGnome }}

#{{ if eq .chezmoi.os "darwin" }} Darwin
        optbins = []
        usrbins = []
        usrlocalbins = []
	binpaths = [ "{{ joinPath .chezmoi.homeDir "/.dotnet/tools" }}" ]
        binroots = [ "/", "/usr/", "{{ .chezmoi.homeDir }}", "{{ joinPath .chezmoi.homeDir "/.local" }}", "{{ joinPath .chezmoi.homeDir "/go" }}" ]
        terminfosearch = [ "/usr/share/terminfo", "/usr/lib/share/terminfo", "/usr/share/lib/terminfo" ]
        termfallback = [ "xterm", "linux", "vt100" ]
#{{ else if eq .chezmoi.os "linux" }} Linux
        optbins = []
        usrbins = ["games"]
        usrlocalbins = []
	binpaths = [ "{{ joinPath .chezmoi.homeDir "/.dotnet/tools" }}" ]
        binroots = [ "/", "/usr/", "{{ .chezmoi.homeDir }}", "{{ joinPath .chezmoi.homeDir "/.local" }}", "{{ joinPath .chezmoi.homeDir "/go" }}" ]
        terminfosearch = [ "/usr/share/terminfo", "/usr/lib/share/terminfo", "/usr/share/lib/terminfo" ]
        termfallback = [ "rxvt", "xterm", "linux", "vt100" ]
#{{ else if eq .chezmoi.os "windows" }} Windows
        optbins = []
        usrbins = []
        usrlocalbins = []
	binpaths = [ "{{ joinPath .chezmoi.homeDir "/.dotnet/tools" }}" ]
        binroots = [ ]
        terminfosearch = [ ]
        termfallback = [ "linux", "vt100" ]
#{{ else if eq .chezmoi.os "solaris" }} Solaris
        optbins = [ "httrack", "SUNWsneep", "test", "VRTSvxvm", "SUNWvts", "SUNWexplo", "VRTS", "VRTSob" ]
        usrbins = [ "local", "sfw", "ccs" ]
        usrlocalbins = [ "mysql", "apache", "apache2", "php" ]
	binpaths = [ "{{ joinPath .chezmoi.homeDir "/.dotnet/tools" }}" ]
        binroots = [ "/", "/usr/", "{{ .chezmoi.homeDir }}", "{{ joinPath .chezmoi.homeDir "/.local" }}", "{{ joinPath .chezmoi.homeDir "/go" }}" }}" ]
        terminfosearch = [ "/usr/share/terminfo", "/usr/lib/share/terminfo", "/usr/share/lib/terminfo" ]
        termfallback = [ "xterm", "linux", "vt100" ]
#{{ else }} Unknown OS {{ .chezmoi.os }}
        optbins = []
        usrbins = []
        usrlocalbins = []
	binpaths = []
        binroots = [  ]
        terminfosearch = [ ]
        termfallback = [ "linux", "vt100" ]
#{{ end }} End OS Specific code

#[diff]
#{{ if and (index . "headless") (lookPath "vimdiff") }}
#	command = "vimdiff"
#{{ else if and (eq .chezmoi.os "linux") (lookPath "kdiff3") }}
#	command = "kdiff3"
#{{ else if lookPath "vimdiff" }}
#	command = "vimdiff"
#{{ end }}

#[merge]
#	command = "vimdiff"
