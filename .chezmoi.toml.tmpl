{{- $isWsl := or (env "WSL_DISTRO_NAME") (env "IS_WSL") | not | not -}}
{{- $isDevcontainer := or (env "REMOTE_CONTAINERS") (env "CODESPACES") (env "VSCODE_REMOTE_CONTAINERS_SESSION") | not | not -}}
{{- $isGnome := lookPath "gnome-shell" | not | not -}}
{{- $hasHomeGPG := not ( kindIs "boolean" ( stat (joinPath .chezmoi.homeDir ".gnupg/private-keys-v1.d" ) ) ) -}}
{{- $headlessGuess := ( or $isWsl (not (or ( env "DISPLAY" ) (eq .chezmoi.os "windows" ) ) ) ) -}}
{{- $gpgconfiguredGuess := $hasHomeGPG -}}
{{- $headless := promptBool "headless" $headlessGuess -}}
{{- $gpgconfigured := promptBool "gpgconfigured" $gpgconfiguredGuess -}}
{{- $autoGit := promptBool "auto git?" true -}}
{{- $gitUserName := promptString "git user.name" (trim (output "sh" "-c" "git config --get user.name 2>/dev/null || getent passwd $(id -un) | cut -d ':' -f5 | cut -d ',' -f1 || getent passwd $(id -un) | cut -d ':' -f1")) -}}
{{- $gitUserEmail := promptString "git user.email" (trim (output "sh" "-c" "git config --get user.email 2>/dev/null || true")) -}}
{{- $generatedTime := now | date "2006-01-02 15:04:05 -0700" -}}

{{- $paths := list -}}
{{- $binroots := list -}}
{{- $terminfosearch := list -}}
{{- $termfallback := list "linux" "vt100" -}}
{{- $gpgLocation := "/usr/bin/gpg" -}}

#{{ if eq .chezmoi.os "darwin" }} Darwin
        {{- $binroots = list
          "/"
          "/usr/"
          .chezmoi.homeDir
          (joinPath .chezmoi.homeDir "/.local")
          (joinPath .chezmoi.homeDir "/go")
          (joinPath .chezmoi.homeDir "/Library/flutter")
          (joinPath .chezmoi.homeDir "/.pub-cache")
          (joinPath .chezmoi.homeDir "/.cache/npm")
        -}}
        {{- $paths = append $paths (joinPath .chezmoi.homeDir "/.dotnet/tools") -}}
        {{- $terminfosearch = list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" -}}
        {{- $termfallback = list "xterm" "linux" "vt100" -}}
#{{ else if eq .chezmoi.os "linux" }} Linux
        {{- $binroots = list
          "/"
          "/usr/"
          "/usr/local/"
          .chezmoi.homeDir
          (joinPath .chezmoi.homeDir "/.local")
          (joinPath .chezmoi.homeDir "/go")
          (joinPath .chezmoi.homeDir "/.go/path")
          (joinPath .chezmoi.homeDir "/.go")
          (joinPath .chezmoi.homeDir "/libs/flutter")
          (joinPath .chezmoi.homeDir "/sdk/flutter")
          (joinPath .chezmoi.homeDir "/.pub-cache")
          (joinPath .chezmoi.homeDir "/.cache/npm")
        -}}
        {{- $paths = append $paths (joinPath .chezmoi.homeDir "/.dotnet/tools") -}}
        {{- $paths = append $paths (joinPath .chezmoi.homeDir "/.local/share/flatpak/exports/bin") -}}
        {{- $paths = append $paths "/var/lib/flatpak/exports/bin" -}}
        {{- $paths = append $paths "/usr/games/bin" -}}
        {{- $paths = append $paths "/opt/Bitwarden" -}}
        {{- $terminfosearch = list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" -}}
        {{- $termfallback = list "rxvt" "xterm" "linux" "vt100" -}}
#{{ else if eq .chezmoi.os "windows" }} Windows
        {{- $programFiles := (env "ProgramFiles" | default "C:/Program Files") -}}
        {{- $programFilesX86 := (env "ProgramFiles(x86)" | default "C:/Program Files (x86)") -}}
        {{- $systemRoot := (env "SystemRoot" | default "C:/Windows") -}}
        {{- $binroots = list $programFiles $programFilesX86 $systemRoot (joinPath $systemRoot "System32") -}}
        {{- $paths = append $paths (joinPath .chezmoi.homeDir "AppData/Local/Microsoft/WindowsApps") -}}
        {{- $terminfosearch = list -}}
        {{- $termfallback = list "linux" "vt100" -}}
        {{- $gpgLocation = joinPath $programFilesX86 "GnuPG/bin/gpg.exe" -}}
#{{ else if eq .chezmoi.os "solaris" }} Solaris
        {{- $binroots = list
          "/"
          "/usr/"
          .chezmoi.homeDir
          (joinPath .chezmoi.homeDir "/.local")
          (joinPath .chezmoi.homeDir "/go")
        -}}
        {{- $paths = append $paths (joinPath .chezmoi.homeDir "/.dotnet/tools") -}}
        {{- range list "httrack" "SUNWsneep" "test" "VRTSvxvm" "SUNWvts" "SUNWexplo" "VRTS" "VRTSob" -}}
          {{- $paths = append $paths (joinPath "/opt" . "/bin") -}}
        {{- end -}}
        {{- range list "local" "sfw" "ccs" -}}
          {{- $paths = append $paths (joinPath "/usr" . "/bin") -}}
        {{- end -}}
        {{- range list "mysql" "apache" "apache2" "php" -}}
          {{- $paths = append $paths (joinPath "/usr/local" . "/bin") -}}
        {{- end -}}
        {{- $terminfosearch = list "/usr/share/terminfo" "/usr/lib/share/terminfo" "/usr/share/lib/terminfo" -}}
        {{- $termfallback = list "xterm" "linux" "vt100" -}}
#{{ else }} Unknown OS {{ .chezmoi.os }}
        {{- $binroots = list -}}
        {{- $paths = list -}}
        {{- $terminfosearch = list -}}
        {{- $termfallback = list "linux" "vt100" -}}

#{{ end }} End OS Specific code

{{- if ne .chezmoi.os "windows" -}}
  {{- range $pidx, $prefix := list "libs" "sdk" -}}
    {{- range $tidx, $tool := list "go" "flutter" -}}
      {{- $root := joinPath $.chezmoi.homeDir $prefix $tool -}}
      {{- if stat (joinPath $root "bin") -}}
        {{- $binroots = append $binroots $root -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- /* Build unified paths list for PATH discovery */ -}}
{{- range $p := $binroots -}}
  {{- $paths = append $paths (joinPath $p "bin") -}}
  {{- $paths = append $paths (joinPath $p "sbin") -}}
{{- end -}}


{{- $gitCredentialManagerLocation := findExecutable "git-credential-manager" $paths -}}
{{- $gitCredentialOAuthLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/git-credential-oauth") -}}
  {{- $gitCredentialOAuthLocation = joinPath .chezmoi.homeDir "/.local/bin/git-credential-oauth" -}}
{{- else -}}
  {{- $gitCredentialOAuthLocation = findExecutable "git-credential-oauth" $paths -}}
  {{- if eq $gitCredentialOAuthLocation "" -}}
    {{- $gitCredentialOAuthLocation = lookPath "git-credential-oauth" -}}
  {{- end -}}
{{- end -}}
{{- $vimdiffLocation := findExecutable "vimdiff" $paths -}}
{{- $nvimdiffLocation := findExecutable "nvimdiff" $paths -}}
{{- $kdiff3Location := findExecutable "kdiff3" $paths -}}
{{- $vimLocation := findExecutable "vim" $paths -}}
{{- $neovimLocation := findExecutable "nvim" $paths -}}
{{- $notepadppLocation := findExecutable "Notepad++/notepad++.exe" $binroots -}}
{{- if eq $notepadppLocation "" -}}
  {{- $notepadppLocation = lookPath "notepad++" -}}
{{- end -}}
{{- $notepadLocation := findExecutable "notepad.exe" $binroots -}}
{{- if eq $notepadLocation "" -}}
  {{- $notepadLocation = lookPath "notepad" -}}
{{- end -}}
{{- $gvimLocation := lookPath "gvim" -}}
{{- if eq $gvimLocation "" -}}
  {{- $gvimLocation = findExecutable "Vim/vim90/gvim.exe" $binroots -}}
  {{- if eq $gvimLocation "" -}}
    {{- $gvimLocation = findExecutable "Vim/vim91/gvim.exe" $binroots -}}
  {{- end -}}
{{- end -}}
{{- $vscodeLocation := lookPath "code" -}}
{{- if eq $vscodeLocation "" -}}
  {{- $vscodeLocation = findExecutable "Microsoft VS Code/Code.exe" $binroots -}}
{{- end -}}
{{- $intellijLocation := findExecutable "JetBrains/IntelliJ IDEA/bin/idea64.exe" $binroots -}}
{{- if eq $intellijLocation "" -}}
  {{- $intellijLocation = lookPath "idea64" -}}
{{- end -}}
{{- $vimpagerLocation := findExecutable "vimpager" $paths -}}
{{- $nvimLocation := findExecutable "nvim" $paths -}}
{{- $nvimpagerLocation := findExecutable "nvimpager" $paths -}}
{{- $deltaLocation := findExecutable "delta" $paths -}}
{{- $gitPagerLocation := findOneExecutable (list "delta" "nvimpager" "vimpager" "nvim" "vim") $paths -}}
{{- $gitLocation := findExecutable "git" $paths -}}
{{- if eq $gitLocation "" -}}
  {{- $gitLocation = lookPath "git" -}}
{{- end -}}
{{- $zshLocation := findExecutable "zsh" $paths -}}
{{- $fishLocation := findExecutable "fish" $paths -}}
{{- if eq $fishLocation "" -}}
  {{- $fishLocation = lookPath "fish" -}}
{{- end -}}
{{- $lessLocation := findExecutable "less" $paths -}}
{{- $mvnLocation := findExecutable "mvn" $paths -}}
{{- $zellijLocation := findExecutable "zellij" $paths -}}
{{- $tmuxLocation := findExecutable "tmux" $paths -}}
{{- $btopLocation := findExecutable "btop" $paths -}}
{{- if eq $btopLocation "" -}}
  {{- $btopLocation = lookPath "btop" -}}
{{- end -}}
{{- $flutterLocation := findExecutable "flutter" $paths -}}
{{- if eq $flutterLocation "" -}}
  {{- $flutterLocation = lookPath "flutter" -}}
{{- end -}}
{{- $goLocation := findExecutable "go" $paths -}}
{{- if eq $goLocation "" -}}
  {{- $goLocation = lookPath "go" -}}
{{- end -}}
{{- $ghLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/gh") -}}
  {{- $ghLocation = joinPath .chezmoi.homeDir "/.local/bin/gh" -}}
{{- else -}}
  {{- $ghLocation = findExecutable "gh" $paths -}}
  {{- if eq $ghLocation "" -}}
    {{- $ghLocation = lookPath "gh" -}}
  {{- end -}}
{{- end -}}

{{- $jqLocation := findExecutable "jq" $paths -}}
{{- if eq $jqLocation "" -}}
  {{- $jqLocation = lookPath "jq" -}}
{{- end -}}

{{- $gitTagIncLocation := "" -}}
{{- if stat (joinPath .chezmoi.homeDir "/.local/bin/git-tag-inc") -}}
  {{- $gitTagIncLocation = joinPath .chezmoi.homeDir "/.local/bin/git-tag-inc" -}}
{{- else -}}
  {{- $gitTagIncLocation = findExecutable "git-tag-inc" $paths -}}
  {{- if eq $gitTagIncLocation "" -}}
    {{- $gitTagIncLocation = lookPath "git-tag-inc" -}}
  {{- end -}}
{{- end -}}

{{- $rarLocation := findExecutable "rar" $paths -}}
{{- if eq $rarLocation "" -}}
  {{- $rarLocation = lookPath "rar" -}}
{{- end -}}

{{- $sevenZipLocation := findExecutable "7z" $paths -}}
{{- if eq $sevenZipLocation "" -}}
  {{- $sevenZipLocation = lookPath "7z" -}}
{{- end -}}

{{- $digLocation := findExecutable "dig" $paths -}}
{{- if eq $digLocation "" -}}
  {{- $digLocation = lookPath "dig" -}}
{{- end -}}

{{- $xinputLocation := findExecutable "xinput" $paths -}}
{{- if eq $xinputLocation "" -}}
  {{- $xinputLocation = lookPath "xinput" -}}
{{- end -}}

{{- $wofiLocation := findExecutable "wofi" $paths -}}
{{- if eq $wofiLocation "" -}}
  {{- $wofiLocation = lookPath "wofi" -}}
{{- end -}}
{{- $rofiLocation := findExecutable "rofi" $paths -}}
{{- if eq $rofiLocation "" -}}
  {{- $rofiLocation = lookPath "rofi" -}}
{{- end -}}
{{- $dmenuRunLocation := findExecutable "dmenu_run" $paths -}}
{{- if eq $dmenuRunLocation "" -}}
  {{- $dmenuRunLocation = lookPath "dmenu_run" -}}
{{- end -}}

{{- $terminatorLocation := findExecutable "terminator" $paths -}}
{{- if eq $terminatorLocation "" -}}
  {{- $terminatorLocation = lookPath "terminator" -}}
{{- end -}}
{{- $weztermLocation := findExecutable "wezterm" $paths -}}
{{- if eq $weztermLocation "" -}}
  {{- $weztermLocation = lookPath "wezterm" -}}
{{- end -}}
{{- $konsoleLocation := findExecutable "konsole" $paths -}}
{{- if eq $konsoleLocation "" -}}
  {{- $konsoleLocation = lookPath "konsole" -}}
{{- end -}}
{{- $alacrittyLocation := findExecutable "alacritty" $paths -}}
{{- if eq $alacrittyLocation "" -}}
  {{- $alacrittyLocation = lookPath "alacritty" -}}
{{- end -}}
{{- $urxvtLocation := findExecutable "urxvt" $paths -}}
{{- if eq $urxvtLocation "" -}}
  {{- $urxvtLocation = lookPath "urxvt" -}}
{{- end -}}
{{- $xtermLocation := findExecutable "xterm" $paths -}}
{{- if eq $xtermLocation "" -}}
  {{- $xtermLocation = lookPath "xterm" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (eq $terminatorLocation "") (eq $weztermLocation "") (eq $konsoleLocation "") (eq $alacrittyLocation "") (eq $urxvtLocation "") (eq $xtermLocation "") -}}
        {{- writeToStdout "Can't find terminal (terminator/wezterm/konsole/alacritty/urxvt/xterm) \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (eq $wofiLocation "") (eq $rofiLocation "") (eq $dmenuRunLocation "") -}}
        {{- writeToStdout "Can't find application launcher (wofi/rofi/dmenu_run) \n" -}}
{{- end -}}

{{- $swaylockLocation := findExecutable "swaylock" $paths -}}
{{- if eq $swaylockLocation "" -}}
  {{- $swaylockLocation = lookPath "swaylock" -}}
{{- end -}}
{{- $xscreensaverCommandLocation := findExecutable "xscreensaver-command" $paths -}}
{{- if eq $xscreensaverCommandLocation "" -}}
  {{- $xscreensaverCommandLocation = lookPath "xscreensaver-command" -}}
{{- end -}}
{{- $xscreensaverLocation := findExecutable "xscreensaver" $paths -}}
{{- if eq $xscreensaverLocation "" -}}
  {{- $xscreensaverLocation = lookPath "xscreensaver" -}}
{{- end -}}
{{- if and (eq .chezmoi.os "linux") (eq $swaylockLocation "") (eq $xscreensaverCommandLocation "") (eq $xscreensaverLocation "") -}}
        {{- writeToStdout "Can't find screen locker (swaylock/xscreensaver) \n" -}}
{{- end -}}
{{- $clipseLocation := findExecutable "clipse" $paths -}}
{{- if eq $clipseLocation "" -}}
  {{- $clipseLocation = lookPath "clipse" -}}
{{- end -}}
{{- if eq $clipseLocation "" -}}
        {{- writeToStdout "Can't find clipse (run installtool clipse) \n" -}}
{{- else -}}
        {{- $clipseVersion := trim (output "sh" "-c" (printf "%s --version 2>/dev/null" $clipseLocation)) -}}
        {{- if eq $clipseVersion "" -}}
                {{- writeToStdout (printf "clipse installed at %s\n" $clipseLocation) -}}
        {{- else -}}
                {{- writeToStdout (printf "clipse installed at %s (%s)\n" $clipseLocation $clipseVersion) -}}
        {{- end -}}
{{- end -}}


{{- $chromeLocation := findOneExecutable (list
  "google-chrome"
  "google-chrome-stable"
  "google-chrome-unstable"
  "google-chrome-beta") $paths -}}
{{- if eq $chromeLocation "" -}}
        {{- writeToStdout "Can't find chrome \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $gitCredentialManagerLocation )) -}}
        {{- writeToStdout "Can't find GCM: https://github.com/GitCredentialManager/git-credential-manager/releases \n" -}}
{{- end -}}

{{- if not (stat $gitCredentialOAuthLocation ) -}}
        {{- writeToStdout "Can't find git-credential-oauth \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $neovimLocation)) -}}
        {{- writeToStdout "Can't find neovim \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimLocation)) -}}
        {{- writeToStdout "Can't find vim \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimdiffLocation)) -}}
        {{- writeToStdout "Can't find vimdiff \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $vimpagerLocation)) -}}
        {{- writeToStdout "Can't find vimpager \n" -}}
{{- end -}}
{{- if not (stat $gitPagerLocation ) -}}
        {{- writeToStdout "Can't find suitable git pager \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $zellijLocation)) -}}
        {{- writeToStdout "Can't find zellij \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $tmuxLocation)) -}}
        {{- writeToStdout "Can't find tmux \n" -}}
{{- end -}}
{{- if and (eq .chezmoi.os "linux") (not (stat $btopLocation)) -}}
        {{- writeToStdout "Can't find btop \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not $headless) (not (stat $kdiff3Location)) -}}
        {{- writeToStdout "Can't find kdiff3 \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "windows") (not (stat $notepadppLocation )) -}}
        {{- writeToStdout "Can't find Notepad++ \n" -}}
{{- end -}}
{{- if and (eq .chezmoi.os "windows") (not (stat $gvimLocation )) -}}
        {{- writeToStdout "Can't find gVim \n" -}}
{{- end -}}
{{- if and (eq .chezmoi.os "windows") (not (stat $notepadLocation )) -}}
        {{- writeToStdout "Can't find Notepad \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "windows") (not (stat $gpgLocation )) -}}
        {{- writeToStdout "Missing GPG install Kleopatra https://gpg4win.org/download.html \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $zshLocation )) -}}
        {{- writeToStdout "Can't find zsh \n" -}}
{{- end -}}
{{- if and (not (eq .chezmoi.os "windows")) (not (stat $fishLocation )) -}}
        {{- writeToStdout "Can't find fish \n" -}}
{{- end -}}

{{- if and (not (eq .chezmoi.os "windows")) (not (stat $lessLocation )) -}}
        {{- writeToStdout "Can't find less \n" -}}
{{- end -}}

{{- if not (stat $mvnLocation ) -}}
        {{- writeToStdout "Can't find maven (mvn) \n" -}}
{{- end -}}

{{- if not (stat $ghLocation ) -}}
        {{- writeToStdout "Can't find GitHub CLI (gh) \n" -}}
{{- end -}}

{{- if eq $flutterLocation "" -}}
        {{- writeToStdout "Can't find flutter \n" -}}
{{- else if not (stat (joinPath (dir $flutterLocation ) "/cache/flutter.version.json")) -}}
        {{- writeToStdout (printf "Flutter installed at %s (%s)\n" $flutterLocation "unknown version") -}}
{{- else -}}
        {{- $flutterVersion := include (joinPath (dir $flutterLocation ) "/cache/flutter.version.json") | fromJson | jq ".flutterVersion" | first -}}
        {{- writeToStdout (printf "Flutter installed at %s (%s)\n" $flutterLocation $flutterVersion) -}}
{{- end -}}

{{- if eq $goLocation "" -}}
        {{- writeToStdout "Can't find go \n" -}}
{{- else -}}
        {{- $goVersion := trim (output $goLocation "version") -}}
        {{- writeToStdout (printf "Go installed at %s (%s)\n" $goLocation $goVersion) -}}
{{- end -}}

{{- if not (stat $gitTagIncLocation ) -}}
        {{- writeToStdout "Can't find git-tag-inc \n" -}}
{{- end -}}

{{- if not (stat $rarLocation ) -}}
        {{- writeToStdout "Can't find rar \n" -}}
{{- end -}}
{{- if not (stat $sevenZipLocation ) -}}
        {{- writeToStdout "Can't find 7z \n" -}}
{{- end -}}

{{- if not (stat $digLocation ) -}}
        {{- writeToStdout "Can't find dig \n" -}}
{{- end -}}

{{- if not (stat $jqLocation ) -}}
        {{- writeToStdout "Can't find jq \n" -}}
{{- end -}}

{{- if and (eq .chezmoi.os "linux") (not (stat $xinputLocation )) -}}
        {{- writeToStdout "Can't find xinput \n" -}}
{{- end -}}

[git]
    autoCommit = {{ $autoGit }}
    autoPush = {{ $autoGit }}

[data]
        headless={{ $headless }}
        gpgconfigured={{ $gpgconfigured }}
        isWsl={{ $isWsl }}
        isDevcontainer={{ $isDevcontainer }}
        isGnome={{ $isGnome }}
        gitUserName="{{ $gitUserName }}"
        gitUserEmail="{{ $gitUserEmail }}"
        gitCredentialManagerLocation="{{ $gitCredentialManagerLocation }}"
        gitCredentialOAuthLocation="{{ $gitCredentialOAuthLocation }}"
        vimdiffLocation="{{ $vimdiffLocation }}"
        nvimdiffLocation="{{ $nvimdiffLocation }}"
        kdiff3Location="{{ $kdiff3Location }}"
        vimLocation="{{ $vimLocation }}"
        neovimLocation="{{ $neovimLocation }}"
        notepadppLocation="{{ $notepadppLocation }}"
        notepadLocation="{{ $notepadLocation }}"
        gvimLocation="{{ $gvimLocation }}"
        vscodeLocation="{{ $vscodeLocation }}"
        intellijLocation="{{ $intellijLocation }}"
        vimpagerLocation="{{ $vimpagerLocation }}"
        nvimpagerLocation="{{ $nvimpagerLocation }}"
        gitPagerLocation="{{ $gitPagerLocation }}"
        gitLocation="{{ $gitLocation }}"
        gpgLocation="{{$gpgLocation}}"
        zshLocation="{{$zshLocation}}"
        fishLocation="{{$fishLocation}}"
        lessLocation="{{$lessLocation}}"
        mvnLocation="{{$mvnLocation}}"
        zellijLocation="{{$zellijLocation}}"
        tmuxLocation="{{$tmuxLocation}}"
        btopLocation="{{$btopLocation}}"
        flutterLocation="{{$flutterLocation}}"
        goLocation="{{$goLocation}}"
        ghLocation="{{$ghLocation}}"
        gitTagIncLocation="{{$gitTagIncLocation}}"
        rarLocation="{{$rarLocation}}"
        sevenZipLocation="{{$sevenZipLocation}}"
        digLocation="{{$digLocation}}"
        jqLocation="{{$jqLocation}}"
        xinputLocation="{{$xinputLocation}}"
        chromeLocation="{{$chromeLocation}}"
        wofiLocation="{{$wofiLocation}}"
        rofiLocation="{{$rofiLocation}}"
        dmenuRunLocation="{{$dmenuRunLocation}}"
        terminatorLocation="{{$terminatorLocation}}"
        weztermLocation="{{$weztermLocation}}"
        konsoleLocation="{{$konsoleLocation}}"
        alacrittyLocation="{{$alacrittyLocation}}"
        urxvtLocation="{{$urxvtLocation}}"
        xtermLocation="{{$xtermLocation}}"
        swaylockLocation="{{$swaylockLocation}}"
        xscreensaverCommandLocation="{{$xscreensaverCommandLocation}}"
        xscreensaverLocation="{{$xscreensaverLocation}}"
        clipse="{{$clipseLocation}}"
        minBtopVersion="1.2.13"
        minGitVersion="2.45.1"
        minZshVersion="5.9"
        minTmuxVersion="3.3a"
        minFishVersion="3.6"
        minVimVersion="9.1"
        minNvimVersion="0.9.5"
        minSevenZipVersion="16.02"
        minJqVersion="1.6"
        # Timestamp of when chezmoi templates were last processed. Defined here
        # so it remains constant across templated files and prevents noisy diffs
        # when regenerating dotfiles.
        generatedTime="{{$generatedTime}}"
        terminfosearch = [{{range $each := $terminfosearch}}"{{$each}}", {{end}}]
        termfallback = [{{range $each := $termfallback}}"{{$each}}", {{end}}]
        paths = [{{range $each := $paths}}"{{$each}}", {{end}}]

[merge]
{{if stat $nvimLocation -}}
    command = "{{$nvimLocation}}"
    args = [
        "-d",
        {{ printf "%q" "{{ .Destination }}" }},
        {{ printf "%q" "{{ .Source }}" }},
        {{ printf "%q" "{{ .Target }}" }},
    ]
{{end -}}

[diff]
{{if stat $deltaLocation -}}
  pager = "{{$deltaLocation}}"
{{end -}}

