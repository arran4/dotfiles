[user]
  name = {{ index . "gitUserName" }}
  email = {{ index . "gitUserEmail" }}
  useConfigOnly = true
[init]
  defaultBranch=main
[core]
  autocrlf = input
{{- if eq .chezmoi.os "windows" }}
  {{- if stat (index . "notepadppLocation") }}
  editor = {{ index . "notepadppLocation" }}
  {{- else if stat (index . "gvimLocation") }}
  editor = {{ index . "gvimLocation" }}
  {{- else if stat (index . "vscodeLocation") }}
  editor = {{ index . "vscodeLocation" }} --wait
  {{- else if stat (index . "intellijLocation") }}
  editor = {{ index . "intellijLocation" }}
  {{- else if stat (index . "notepadLocation") }}
  editor = {{ index . "notepadLocation" }}
  {{- else }}
  editor = notepad
  {{- end }}
{{- else }}
  {{- if stat (index . "neovimLocation") }}
  editor = {{ index . "neovimLocation" }}
  {{- else if stat (index . "vimLocation") }}
  editor = {{ index . "vimLocation" }}
  {{- else }}
  editor = vi
  {{- end }}
{{- end }}
  excludesfile = {{ .chezmoi.homeDir }}/.config/git/ignore
  longpaths = true
  # quotepath = false # Unicode characters
{{- $pager := index . "gitPagerLocation" -}}
{{- if ne $pager "" }}
    pager = {{ $pager }}
{{- end }}

[rerere]
  enabled = 1

[credential "https://github.com"]
  useHttpPath = true

[credential]
{{ $oauthHelper := (index . "gitCredentialOAuthLocation") }}
{{ if ne $oauthHelper "" }}
  helper = cache --timeout 21600 # six hours
  {{ if index . "headless" }}
  helper = oauth -device
  {{ else }}
  helper = oauth
  {{ end }}
{{ end }}
{{ if index . "headless" }}
        credentialStore = cache
        cacheOptions = "--timeout 14400"
        helper = {{ index $ "gitCredentialManagerLocation" }}
{{ else if eq .chezmoi.os "linux" }}
  {{ if eq .chezmoi.osRelease.id "ubuntu" }}
         credentialStore = secretservice
         helper = {{ index $ "gitCredentialManagerLocation" }}
  {{ else if eq .chezmoi.osRelease.id "gentoo" }}
         credentialStore = secretservice
         helper = {{ index $ "gitCredentialManagerLocation" }}
  {{ end}}
{{ else }}
  helper = manager
{{ end }}

[credential "https://dev.azure.com"]
   useHttpPath = true

[credential "https://git.assembla.com"]
  useHttpPath = true
{{ if eq .chezmoi.os "windows" }}
[gpg]
  program = "{{ index . "gpgLocation" }}"
{{ end }}

[credential "https://source.developers.google.com"]
    provider = generic

[credential "https://gitlab.arran.net.au"]
  gitLabAuthModes = pat
  # oauthClientId = {{/* (ejsonDecrypt "private_gitlab_oauth.ejson").gitlab_oauth_client_id */}}

{{ if ne .chezmoi.os "windows" }}
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto

[color "branch"]
  current = green
  remote = yellow

{{ end }}

[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true
  # Should probably use a script to select here.
{{ if lookPath "delta" }}
    conflictstyle = zdiff3
  tool = delta
{{ else if and (index . "headless") (stat (index . "vimdiffLocation" ) ) }}
  tool = {{index . "vimdiffLocation"}}
    conflictstyle = diff3 # show original content before conflicts
{{ else if and (eq .chezmoi.os "linux") (stat (index . "kdiff3Location" ) ) }}
  tool = {{index . "kdiff3Location" }}
    conflictstyle = diff3 # show original content before conflicts
{{ else if stat (index . "vimdiffLocation") }}
    conflictstyle = diff3 # show original content before conflicts
  tool = {{ index . "vimdiffLocation" }}
{{ end }}

[mergetool "kdiff3"]
    trustExitCode = false

{{ if eq .chezmoi.os "darwin" }}
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
{{end}}

[diff]
{{ if lookPath "delta" }}
  tool = delta
{{ else if and (index . "headless") (stat (index . "vimdiffLocation" ) ) }}
  tool = {{ index . "vimdiffLocation" }}
{{ else if and (eq .chezmoi.os "linux") (stat (index . "kdiff3Location" )) }}
  tool = {{ index . "kdiff3Location" }}
{{ else if stat (index . "vimdiffLocation" ) }}
  tool = {{ index . "vimdiffLocation" }}
{{ end }}
    colorMoved = default

[difftool]
  prompt = true

[difftool "kdiff3"]
    trustExitCode = false

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[difftool "nvimdiff"]
  cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"

[commit]
{{ if index . "gpgconfigured" }}
  gpgsign = true
{{ end }}
  template = ~/.config/git/message
  status = true

[tag]
{{ if index . "gpgconfigured" }}
  gpgsign = true
{{ end }}
#  template = ~/.config/git/tagmessage

[pager]
{{ if lookPath "delta" }}
  # Intentionally different
  #tag = nvimpager
{{end}}

[push]
{{ if index . "gpgconfigured" }}
  gpgsign = if-asked
{{ end }}
    followTags = true

[alias]
  #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

#[include]
#  path = ~/.gitconfig.local # Allow for local overrides

[grep]
  lineNumber = true
  patternType = extended

[man]
  viewer = less

[delta]
    navigate = true

[interactive]
{{ if lookPath "delta" }}
    diffFilter = delta --color-only
{{ else if lookPath "vimpager" }}
{{ else if lookPath "nvim" }}
{{ else if lookPath "vim" }}
{{ end }}


[http]
  cookiefile = ~/.cache/git/cookies

[status]
  submodulesummary = true

[advice]
  statusHints = false
