[user]
	name = Arran Ubels
	useConfigOnly = true
[init]
	defaultBranch=main
[core]
	autocrlf = input
	editor = vim
	excludesfile = {{ .chezmoi.homeDir}}/.gitignore
	longpaths = true
	# quotepath = false # Unicode characters
{{ if lookPath "vimdiff" }}
    pager = delta
{{ end }}

[rerere]
  enabled = 1

[credential "https://github.com"]
	useHttpPath = true

[credential]
{{ if index . "headless" }}
	credentialStore = cache
	cacheOptions = "--timeout 14400"
	helper = /usr/local/bin/git-credential-manager
{{ else if eq .chezmoi.os "linux" }}
	{{ if eq .chezmoi.osRelease.id "ubuntu" }}
	       credentialStore = secretservice
	       helper = /usr/local/bin/git-credential-manager
	{{ end}}
{{ else }}
	helper = manager
{{ end }}
       
[credential "https://dev.azure.com"]
   useHttpPath = true

[credential "https://git.assembla.com"]
	useHttpPath = true
{{ if eq .chezmoi.os "windows" }}
[gpg]
	program = "C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe"
{{ end }}

[credential "https://source.developers.google.com"]
    provider = generic

{{ if ne .chezmoi.os "windows" }}
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto
  
[color "branch"]
  current = green
  remote = yellow

{{ end }}

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
{{ if lookPath "vimdiff" }}
	conflictstyle = diff3
{{end}}
	# Somehow switch?
{{ if and (index . "headless") (lookPath "vimdiff") }}
	tool = vimdiff
{{ else if and (eq .chezmoi.os "linux") (lookPath "kdiff3") }}
	tool = kdiff3 
{{ else if lookPath "vimdiff" }}
	tool = vimdiff
{{ end }}

[mergetool "kdiff3"]
    trustExitCode = false

[diff]
{{ if and (index . "headless") (lookPath "vimdiff") }}
	tool = vimdiff
{{ else if and (eq .chezmoi.os "linux") (lookPath "kdiff3") }}
	tool = kdiff3 
{{ else if lookPath "vimdiff" }}
	tool = vimdiff
{{ end }}
    colorMoved = default

[difftool "kdiff3"]
    trustExitCode = false

[commit]
{{ if index . "gpgconfigured" }}
	gpgsign = true
{{ end }}

[tag]
{{ if index . "gpgconfigured" }}
	gpgsign = true
{{ end }}

[push]
{{ if index . "gpgconfigured" }}
	gpgsign = if-asked
{{ end }}

[alias]

  #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

#[include]
#  path = ~/.gitconfig.local # Allow for local overrides

[grep]
  lineNumber = true
  patternType = extended

[man]
  viewer = less

[delta]
    navigate = true

[interactive]
    diffFilter = delta --color-only
