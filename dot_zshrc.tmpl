#!/bin/zsh

# History options
export HISTSIZE=99999999
export HISTFILE=$HOME/.zsh_history
export SAVEHIST=99999999
setopt append_history
setopt inc_append_history
setopt HIST_VERIFY

# Key bindings
bindkey -v
bindkey "^R" history-incremental-search-backward

# Tab completion changes
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle :compinstall filename "${HOME}/.zshrc"

# Prompts
export SPROMPT="Potential spelling error %R , could be %r"

ctx=""
if test -n "${TMUX}"; then
        ctx="${ctx}:tmux"
        if test "$SHLVL" -gt 2; then
                ctx="${ctx}:${SHLVL}"
        fi
else
        if test "$SHLVL" -gt 1; then
                ctx="${ctx}:${SHLVL}"
        fi
fi
if test -n "${ctx}"; then 
	ctx="(${ctx})"
fi
export PROMPT="%("'!'".%S%n%s.%n)@%m:%d %h ${ctx}"$'\n'"%# "
unset ctx

# Helper stuff

setopt interactivecomments       # Enable comments in interactive mode (useful)
#setopt extended_glob             # More powerful glob features

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

autoload -Uz compinit
compinit

# Colours and aliases
autoload -U colors && colors


{{ template "shell-aliases.tmpl" $ }}


#{{ if eq .chezmoi.os "darwin" }} Darwin
#{{ else if eq .chezmoi.os "linux" }} Linux
#{{ else if eq .chezmoi.os "windows" }} Windows
#{{ end }} End OS Specific code

{{ template "shell-term-env.tmpl" $ }}

{{ template "shell-man-env.tmpl" $ }}

{{ template "dev-utils-env.tmpl" $ }}

return # This prevents scripts which append their own installers from "working"
{{/* vim: set filetype=zsh: */}}
