#!/bin/bash

# History options
export HISTFILE=$HOME/.bash_history
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE='32768';
export HISTFILESIZE="${HISTSIZE}";
export SAVEHIST=99999
export HISTFILESIZE=99999

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend

# Key bindings
set -o vi
bind '"^R":"history-incremental-search-backward"'

# Tab completion changes
##uncomment the following to activate bash-completion:
#[ -f /etc/profile.d/bash-completion ] && source /etc/profile.d/bash-completion
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Prompts
ctx=""
if test "$SHLVL" -gt 1; then 
	ctx="${ctx}:${SHLVL}"
fi
if test -n "${ctx}"; then 
	ctx="(${ctx})"
fi
export PS1='\u@\h:'"\${PWD} ${ctx}"$'\n''\$ '
unset ctx

# TODO Machine specifix
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Helper stuff

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# Colours and aliases
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
    alias ll='ls -alF'
    alias la='ls -A'
    {{- if eq .chezmoi.os "darwin" }}
      # Use GNU ls to support https://github.com/seebi/dircolors-solarized
      alias la="gls -lAFh --color=auto"
    {{- end }}

    alias l='ls -CF'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    export CLICOLOR=1
    export LSCOLORS=ExFxCxDxBxegedabagacad
fi

alias ..="cd .. && ls"
alias ...="cd ../.. && ls"

# Get week number
alias week='date +%V'

# M2 nav
alias pushd_m2='pushd ~/.m2/'

#{{ if eq .chezmoi.os "darwin" }} Darwin
#{{ else if eq .chezmoi.os "linux" }} Linux
#{{ else if eq .chezmoi.os "windows" }} Windows
#{{ end }} End OS Specific code


# Terminfo Path discovery
{{range $i, $p := ( index $ "terminfosearch" ) -}} 
	{{- if stat $p -}}if [ -e "{{$p}}" ]; then
	export TERMINFO="{{$p}}"
el
	{{- end -}} 
{{- end }}se
	true
fi


# TERM fallback discovery
if [ -e "$TERMINFO" ] && [ ! "$TERMINFO/$TERM[0]/$TERM" ]; then
	{{range $i, $p := ( index $ "termfallback" ) -}} 
		if [ -e "${TERMINFO}}/{{printf "%c" ( index $p 0 ) }}/{{$p}}" ]; then
		export TERM="{{$p}}"
	el	
	{{- end }}se
		true
	fi
fi

# TODO oneday Manpage path discovery

# Other program envs
# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

export WATCHFMT="%D %T %n@%l.%M %a"
export WATCH=root

{{if stat "/usr/bin/vim" -}}
	# Make vim the default editor.
	export EDITOR='/usr/bin/vim'
	export VISUAL=/usr/bin/vim
{{- else -}}
	# No vim found!
{{- end }}

{{if stat "/usr/bin/less" -}}
	# Donâ€™t clear the screen after quitting a manual page.
	export MANPAGER='/usr/bin/less -X'
	# Pager IS less
	export PAGER=/usr/bin/less
{{- else -}}
	# No less found!
{{- end }}

# Once upon a time I had issues with the default memory allocation. -- These are way too small for my usage now left here for mod later
# export MAVEN_OPTS="-Xmx768m -XX:MaxPermSize=512M"

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# OS Specific
#{{ if eq .chezmoi.os "darwin" }} Darwin
#	{{- if stat "/usr/local/etc/bash_completion.d/git-completion.bash" }} Git bash completion usr local - home brew
GIT_COMPLETION_PATH="/usr/local/etc/bash_completion.d/git-completion.bash"
#	{{- end }}
#{{ else if eq .chezmoi.os "linux" }} Linux
#{{ else if eq .chezmoi.os "windows" }} Windows
#{{ else if eq .chezmoi.os "solaris" }} Solaris -- Been a while
#{{ end }} End OS Specific code

# Path discovery
# Path searching
#{{- range $i, $p := ( index $ "binroots" ) }} Root bins
#	{{- if stat (joinPath $p "/bin") }} Adding {{ joinPath $p "/bin" }}
PATH="${PATH}:{{ joinPath $p "/bin" }}"
#	{{- end }}
#{{- end }}
#{{- range $i, $p := ( index $ "optbins" ) }} Opt bins
#	{{- if stat (joinPath "/opt/" $p "/bin") }} Adding {{ joinPath "/opt/" $p "/bin" }}
PATH="${PATH}:{{ joinPath "/opt/" $p "/bin" }}"
#	{{- end }}
#	{{- if stat (joinPath "/opt/" $p "/sbin") }} Adding {{ joinPath "/opt/" $p "/sbin" }}
PATH="${PATH}:{{ joinPath "/opt/" $p "/sbin" }}"
#	{{- end }}
#{{- end }}
#{{- range $i, $p := ( index $ "usrbins" ) }} User bins
#	{{- if stat (joinPath "/usr/" $p "/bin") }} Adding {{ joinPath "/usr/" $p "/bin" }}
PATH="${PATH}:{{ joinPath "/usr/" $p "/bin" }}"
#	{{- end }}
#	{{- if stat (joinPath "/usr/" $p "/sbin") }} Adding {{ joinPath "/usr/" $p "/sbin" }}
PATH="${PATH}:{{ joinPath "/usr/" $p "/sbin" }}"
#	{{- end }}
#{{- end }}
#{{- range $i, $p := ( index $ "usrlocalbins" ) }} User bins
#	{{- if stat (joinPath "/usr/local/" $p "/bin") }} Adding {{ joinPath "/usr/local/" $p "/bin" }}
PATH="${PATH}:{{ joinPath "/usr/local/" $p "/bin" }}"
#	{{- end }}
#	{{- if stat (joinPath "/usr/local/" $p "/sbin") }} Adding {{ joinPath "/usr/local/" $p "/sbin" }}
PATH="${PATH}:{{ joinPath "/usr/local/" $p "/sbin" }}"
#	{{- end }}
#{{- end }} Done path discovery


return # This prevents scripts which append their own installers from "working"
{{/* vim: set filetype=bash: */}}
